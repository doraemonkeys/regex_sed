name: Go Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
          cache-dependency-path: go/go.sum

      - name: Display Go version
        run: go version

      - name: Install dependencies
        #working-directory: ./go
        run: go get .

      - name: Run Build Script
        env:
          CI_RUNNING: true # for build script
        working-directory: ./
        run: |
          chmod +x ./*.sh
          ./release.sh linux

      - name: Archive artifacts
        id: build_archive
        uses: actions/upload-artifact@v4
        with:
          name: WindSend-Archives-linux
          path: |
            ./dist/*.zip
            ./dist/*.txt
            ./dist/*.gz
            ./dist/*.apk
          if-no-files-found: error

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
          cache-dependency-path: go/go.sum

      - name: Display Go version
        run: go version

      - name: Install dependencies
        #working-directory: ./go
        run: go get .

      - uses: msys2/setup-msys2@v2
        with:
          update: true
          path-type: "inherit"
          install: >-
            zip
      - name: Run Build Script
        shell: msys2 {0}
        env:
          CI_RUNNING: true # for build script
        working-directory: ./
        run: |
          ./release.sh windows
      - name: Archive artifacts
        id: build_archive
        uses: actions/upload-artifact@v4
        with:
          name: WindSend-Archives-windows
          path: |
            ./dist/*.zip
            ./dist/*.gz
          if-no-files-found: error
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
          cache-dependency-path: go/go.sum

      - name: Display Go version
        run: go version

      - name: Install dependencies
        #working-directory: ./go
        run: go get .

      - name: Run Build Script
        env:
          CI_RUNNING: true # for build script
        working-directory: ./
        run: |
          chmod +x ./*.sh
          ./release.sh macos

      - name: Archive artifacts
        id: build_archive
        uses: actions/upload-artifact@v4
        with:
          name: WindSend-Archives-macos
          path: |
            ./dist/*.zip
            ./dist/*.gz
          if-no-files-found: error

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          #ref: master
          fetch-depth: "0"
          fetch-tags: "true"

      - name: Get tags
        run: |
          echo "CURRENTVERSION=$(git describe --tags --abbrev=0 HEAD)" >> $GITHUB_ENV
          git fetch --tags
          echo "PREVERSION=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1))" >> $GITHUB_ENV

      - name: Generate release notes
        run: |
          cp ./.github/gen_release_note_from_commits.sh ./
          bash ./gen_release_note_from_commits.sh -v ${PREVERSION}...${CURRENTVERSION}
          rm ./gen_release_note_from_commits.sh

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          # name: WindSend-Archives-linux
          path: ./Downloaded-Archives
          merge-multiple: true

      - name: Echo env
        run: |
          echo 'ref ${{ github.ref }}'
          echo 'ref name ${{ github.ref_name }}'
          echo 'sha ${{ github.sha }}'
          echo 'actor ${{ github.actor }}'
          echo 'repository ${{ github.repository }}'
          echo 'repository_owner ${{ github.repository_owner }}'
          echo 'event_name ${{ github.event_name }}'
          echo 'event_path ${{ github.event_path }}'
          echo 'workspace ${{ github.workspace }}'
          echo 'action ${{ github.action }}'
          echo 'job ${{ github.job }}'
          echo 'run_id ${{ github.run_id }}'
          echo 'run_number ${{ github.run_number }}'

      - name: Release
        uses: softprops/action-gh-release@v2
        # if: startsWith(github.ref, 'refs/tags/') # e.g. refs/tags/v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ./Downloaded-Archives/*
          draft: true
          body_path: ./release.md
